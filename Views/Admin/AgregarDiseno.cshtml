@{
    Layout = "_LayoutAdmin";
}
@using System.Data;

<!-- Google Fonts and modern CSS -->
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    /* Variables for colors and fonts */
    :root {
        --primary-color: #4B92DB;
        --primary-hover-color: #3a7cc0;
        --background-color: #f0f2f5;
        --container-bg-color: #ffffff;
        --text-color: #495057;
        --label-color: #333;
        --border-color: #dee2e6;
        --font-family: 'Poppins', sans-serif;
    }

    /* General styles */
    body {
        background-color: var(--background-color);
        font-family: var(--font-family);
        color: var(--text-color);
    }

    /* Main container */
    .container {
        max-width: 800px;
        margin-top: 50px;
        margin-bottom: 50px;
        background-color: var(--container-bg-color);
        padding: 40px;
        border-radius: 12px;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    }

    /* Titles */
    h1 {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 30px;
        text-align: center;
    }

    /* Form labels */
    .form-label {
        font-weight: 600;
        color: var(--label-color);
        margin-bottom: 8px;
    }

    /* Form controls */
    .form-control,
    .form-select {
        border: 1px solid var(--border-color);
        border-radius: 8px;
        padding: 12px 15px;
        font-size: 1rem;
        width: 100%;
        transition: border-color 0.3s, box-shadow 0.3s;
    }

    .form-control:focus,
    .form-select:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(75, 146, 219, 0.25);
        outline: none;
    }

    textarea.form-control {
        resize: vertical;
        min-height: 120px;
    }

    /* Submit button */
    .btn-primary {
        background-color: var(--primary-color);
        color: white;
        font-size: 1.1rem;
        font-weight: 600;
        border: none;
        padding: 12px 30px;
        border-radius: 8px;
        margin-top: 20px;
        cursor: pointer;
        transition: background-color 0.3s, transform 0.2s;
        width: 100%;
    }

    .btn-primary:hover {
        background-color: var(--primary-hover-color);
        transform: translateY(-2px);
    }

    /* Checkbox group */
    .checkbox-group {
        border: 1px solid var(--border-color);
        border-radius: 8px;
        padding: 15px;
        margin-top: 10px;
    }

    .custom-control.custom-checkbox {
        padding: 8px 10px;
        border-radius: 5px;
        transition: background-color 0.2s;
    }

    .custom-control.custom-checkbox:hover {
        background-color: #f8f9fa;
    }

    /* Pagination */
    #pagination {
        text-align: center;
        margin-top: 20px;
    }

    #pagination .btn {
        margin: 0 4px;
        font-size: 0.9rem;
        border-radius: 5px;
    }

    #pagination .btn.active {
        background-color: var(--primary-color);
        color: white;
        border-color: var(--primary-color);
    }

    /* Search input */
    #search {
        margin-bottom: 15px;
    }

    /* Spacing */
    .mb-4 {
        margin-bottom: 1.5rem !important;
    }
</style>

<div class="container">
    <h1>Agregar Nuevo Diseño</h1>

    @if (ViewBag.ErrorMessage != null && !string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @ViewBag.ErrorMessage
        </div>
    }

    <form asp-controller="Admin" asp-action="AgregarDiseno" method="post" enctype="multipart/form-data">

        <div class="mb-4">
            <label for="nombre" class="form-label">Nombre del Diseño</label>
            <input type="text" class="form-control" id="nombre" name="nombre" placeholder="Ej: Taza de Gato" required>
        </div>

        <div class="mb-4">
            <label for="descripcion" class="form-label">Descripción</label>
            <textarea class="form-control" id="descripcion" name="descripcion" rows="4" placeholder="Añade una descripción detallada del diseño" required></textarea>
        </div>

        <div class="row">
            <div class="col-md-6 mb-4">
                <label for="precio" class="form-label">Precio</label>
                <input type="number" class="form-control" id="precio" name="precio" placeholder="Ej: 150.00" step="0.01" required>
            </div>
            <div class="col-md-6 mb-4">
                <label for="tipoTaza" class="form-label">Tamaño de taza</label>
                <select class="form-select" id="tipoTaza" name="tipoTaza" required>
                    <option selected disabled value="">Elige un tamaño...</option>
                    @foreach (DataRow row_tamano in ViewBag.Tamano.Rows)
                    {
                        <option value="@row_tamano[0]">@row_tamano[1]</option>
                    }
                </select>
            </div>
        </div>

        <div class="mb-4">
            <label for="search" class="form-label">Categorías del Diseño</label>
            <input type="text" id="search" class="form-control" placeholder="Buscar categorías...">
            
            <div id="opciones" class="checkbox-group mt-2">
                @{ int tagCounter = 0; }
                @foreach (DataRow row_tag in ViewBag.Tags.Rows)
                {
                    <div class="custom-control custom-checkbox">
                        <input name="tags" type="checkbox" class="custom-control-input" id="tag-@tagCounter" value="@row_tag[0]">
                        <label class="custom-control-label" for="tag-@tagCounter">@row_tag[1]</label>
                    </div>
                    tagCounter++;
                }
            </div>
            <div id="pagination" class="btn-toolbar justify-content-center mt-2" role="toolbar">
            </div>
        </div>

        <div class="mb-4">
            <label for="formFileMultiple" class="form-label">Video del Diseño</label>
            <input class="form-control" type="file" name="archivo" id="formFileMultiple" accept="video/*" required>
        </div>

        <button type="submit" class="btn btn-primary">Agregar Diseño</button>

    </form>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const itemsPerPage = 10;
        let currentPage = 1;
        const optionsContainer = document.getElementById('opciones');
        const allOptions = Array.from(optionsContainer.querySelectorAll('.custom-control.custom-checkbox'));
        const paginationContainer = document.getElementById("pagination");
        const searchInput = document.getElementById("search");

        function showOptions(page, query = "") {
            const lowerCaseQuery = query.toLowerCase();
            
            const filteredOptions = allOptions.filter(option => {
                const label = option.querySelector('.custom-control-label');
                return label && label.textContent.toLowerCase().includes(lowerCaseQuery);
            });

            allOptions.forEach(option => option.style.display = 'none');

            const start = (page - 1) * itemsPerPage;
            const end = start + itemsPerPage;
            const paginatedOptions = filteredOptions.slice(start, end);

            paginatedOptions.forEach(option => option.style.display = 'block');

            updatePagination(filteredOptions.length, page);
        }

        function updatePagination(totalItems, page) {
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            paginationContainer.innerHTML = "";

            if (totalPages <= 1) return;

            const group = document.createElement("div");
            group.classList.add("btn-group");

            for (let i = 1; i <= totalPages; i++) {
                const btn = document.createElement("button");
                btn.type = "button";
                btn.classList.add("btn", "btn-outline-secondary");
                btn.textContent = i;
                
                btn.addEventListener('click', () => {
                    currentPage = i;
                    showOptions(currentPage, searchInput.value);
                });

                if (i === page) {
                    btn.classList.add("active");
                }
                group.appendChild(btn);
            }
            paginationContainer.appendChild(group);
        }

        searchInput.addEventListener("input", function() {
            currentPage = 1;
            showOptions(currentPage, this.value);
        });

        // Initial load
        showOptions(currentPage);
    });
</script>
