@{
    // --- ESTA PARTE SE MANTIENE IGUAL ---
    var mensaje = ViewBag.MensajeConfirmacion as string;
    var nombre = ViewBag.Nombre as string;
    var tags = ViewBag.Tags as string[,]; // Esta variable ya no la usaremos en la tabla
    var error = ViewBag.ErrorMessage as string;

    // Tamaño y precio
    var tamanoNombre = ViewBag.TamanoNombre as string; 
    object precioObj = ViewBag.Precio;

    // Formateo MXN seguro
    string precioFmt = "—";
    try
    {
        var mx = new System.Globalization.CultureInfo("es-MX");
        if (precioObj != null)
        {
            decimal p = Convert.ToDecimal(precioObj, mx);
            precioFmt = string.Format(mx, "{0:C}", p);
        }
    }
    catch
    {
        precioFmt = precioObj?.ToString() ?? "—";
    }
}
@* La declaración del modelo es correcta para recibir una List<string[]> *@
@model List<string[]>

@if (!string.IsNullOrEmpty(error))
{
    <div class="alert alert-danger" role="alert">@error</div>
}
else
{
    <div>
        @* --- ESTA PARTE SE MANTIENE IGUAL --- *@
        <h3 class="fw-semibold text-primary mb-3">@mensaje</h3>
        <div class="row text-start g-2">
            <div class="col-12"><strong>Nombre del diseño:</strong> @(!string.IsNullOrWhiteSpace(nombre) ? nombre : "—")</div>
            <div class="col-12 col-md-6"><strong>Tamaño de taza: Taza de 11oz </strong> </div>
            <div class="col-12 col-md-6"><strong>Precio: $50.00</strong> </div>
        </div>

        @* --- INICIO DE LA SECCIÓN MODIFICADA --- *@

        @* CAMBIO 1: La condición ahora usa el 'Model' fuertemente tipado. 
           .Any() es la forma recomendada para ver si una lista tiene elementos. *@
        @if (Model != null && Model.Any())
        {
            <table class="table table-bordered mt-3">
                <thead class="table-light">
                    <tr>
                        <th>Frase</th>
                        <th>Estado</th>
                    </tr>
                </thead>
                <tbody>
                    @* CAMBIO 2: Se usa un bucle 'foreach', que es más limpio y seguro para recorrer una Lista. *@
                    @foreach (var fila in Model)
                    {
                        @* CAMBIO 3: Se accede a los datos por el índice del array 'fila'. *@
                        var estado = fila[2]; 
                        <tr>
                            <td>@fila[1]</td>
                            <td>
                                @* La lógica de los badges se mantiene, ya que depende de la variable 'estado' *@
                                @if (estado == "Encontrado")
                                {
                                    <span class="badge bg-success">@estado</span>
                                }
                                else if (estado == "No encontrado" || estado == "no encontrado")
                                {
                                    <span class="badge bg-danger">@estado</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Nombre</span>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        @* --- FIN DE LA SECCIÓN MODIFICADA --- *@
    </div>
}